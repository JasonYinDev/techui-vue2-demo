import{t as x}from"./themeChart-df325d8f.js";import{m as C}from"./api-0c0121c1.js";import{n as z}from"./index-2766203e.js";let p="path://M1705.06,1318.313v-89.254l-319.9-221.799l0.073-208.063c0.521-84.662-26.629-121.796-63.961-121.491c-37.332-0.305-64.482,36.829-63.961,121.491l0.073,208.063l-319.9,221.799v89.254l330.343-157.288l12.238,241.308l-134.449,92.931l0.531,42.034l175.125-42.917l175.125,42.917l0.531-42.034l-134.449-92.931l12.238-241.308L1705.06,1318.313z";const S={name:"blockCenter",mixins:[x],components:{},data(){return{svgIcon:p,mapInited:!1,legend:["正常","偏航"],chartData:{alladcode:[],geoJson:{},visualMapColors:[$c.cyA16,$c.cbA17,$c.blA18],nav:{data:[{code:1e5,name:"全国"}],position:{top:80,left:30}},lineData:[],planeData:[],planeDangerData:[],layoutCenter:[["50%","66%"],["50%","50%"]],layoutSize:["100%","80%"]},chartOption:{update:!1},clickData:{show:!1,area:"北京",data:"325",x:120,y:120}}},computed:{publicUrl(){return"./maps/"},mapCenter(){const{chartData:e}=this,{layoutCenter:a}=e;return e.nav.data[e.nav.data.length-1].name=="全国"?a[0]:a[1]},mapSize(){const{chartData:e}=this,{layoutSize:a}=e;return e.nav.data[e.nav.data.length-1].name=="全国"?a[0]:a[1]}},methods:{processMapData(e){const{chartData:a,chartOption:s,processTimeLine:n}=this,{lineData:l,planeData:r,planeDangerData:o}=a;s.series=[{name:" Top3",type:"lines",zlevel:2,symbol:["none","circle"],symbolSize:10,silent:!0,dimensions:["lng","lat"],effect:{show:!1,period:6,trailLength:0,symbol:p,symbolSize:30},lineStyle:{color:$c.fade("wh",.5),width:1},data:l},{type:"scatter",symbol:p,silent:!0,dimensions:["lng","lat"],symbolRotate:t=>t[3]-90,coordinateSystem:"geo",label:{show:!1},itemStyle:{color:{type:"radial",x:.3,y:.3,r:.5,colorStops:[{offset:0,color:$c.yel1},{offset:1,color:$c.yel6}],global:!1}},symbolSize:20,data:r,zlevel:5},{type:"scatter",symbol:p,symbolRotate:t=>t[3]-90,coordinateSystem:"geo",symbolOffset:[0,-10],label:{show:!1},itemStyle:{color:{type:"radial",x:.3,y:.3,r:.5,colorStops:[{offset:0,color:$c.rel3},{offset:1,color:$c.rel5}],global:!1}},symbolSize:24,emphasis:{scale:1.5},data:o,zlevel:5}],this.mapInited=!0},processOption(e){if(!e){let t=this.chartData.nav.data;e=t[t.length-1]}const{mapCenter:a,mapSize:s,chartOption:n,processMapData:l,getColor:r}=this;let o={title:{show:!1,text:e.name,left:"center"},geo:{type:"map",map:e.name,roam:!0,scaleLimit:{min:.5,max:5},layoutCenter:a,layoutSize:s,zlevel:1,label:{show:!0,color:r("actFC"),fontSize:12,formatter:t=>{switch(t.name){case"内蒙古自治区":t.name="内蒙古";break;case"西藏自治区":t.name="西藏";break;case"新疆维吾尔自治区":t.name="新疆";break;case"宁夏回族自治区":t.name="宁夏";break;case"广西壮族自治区":t.name="广西";break;case"香港特别行政区":t.name="香港";break;case"澳门特别行政区":t.name="澳门";break}return t.name}},itemStyle:{borderColor:new echarts.graphic.LinearGradient(0,0,0,1,[{offset:0,color:r("mapBDA")},{offset:1,color:r("mapBDB")}],!1),borderWidth:1,shadowColor:r("mapSD"),shadowOffsetY:0,shadowBlur:20,areaColor:{x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:$c.fade(r("mapBGA"),.5)},{offset:1,color:$c.fade(r("mapBGB"),.5)}]}},emphasis:{label:{color:r("actFCS"),fontSize:14,show:!0},itemStyle:{areaColor:{x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:$c.fade(r("mapBGHA"),.5)},{offset:1,color:$c.fade(r("mapBGHB"),.5)}]}}}},series:[]};for(let t in o)n[t]=o[t];n.update=!0,l(e)},getMapData(e){const{chartData:a,processOption:s}=this;let n=[],l=[],r=[];a.geoJson.features.forEach((o,t)=>{a.geoJson.features.forEach((c,v)=>{let m=(Math.random()*500).toFixed(0);if(o.properties.center&&c.properties.center&&o.properties.name&&c.properties.name&&o.properties.name!=c.properties.name){let D=function(b,_,w,$){return Math.atan2($-_,w-b)*180/Math.PI};t==0&&n.push({coords:[o.properties.center,c.properties.center],fromName:o.properties.name,toName:c.properties.name,value:m});let h=o.properties.center[0],d=o.properties.center[1],f=c.properties.center[0],y=c.properties.center[1],i=Math.random(),u=(1-i)*h+i*f,g=(1-i)*d+i*y;t==0&&l.push({name:`${o.properties.name}-${c.properties.name}`,value:[u,g,m,D(h,d,f,y)],cityCode:parseInt(o.properties.adcode)}),t==this.randomNumber(1,3)&&v==this.randomNumber(1,10)&&r.push({name:`${o.properties.name}-${c.properties.name}`,value:[u,g,m,D(h,d,f,y)],cityCode:parseInt(o.properties.adcode)})}})}),a.lineData=n,a.planeData=l,a.planeDangerData=r,s(e)},async initChart(e){const{chartData:a,getMapData:s}=this;a.alladcode.length==0&&await C(this.publicUrl,"all.json").then(n=>{a.alladcode=n}).catch(function(n){console.error("getmap",n)}),await C(this.publicUrl,e.code+"_geojson_full.json").then(n=>{a.geoJson={...n,...e}}).catch(function(n){console.error("getmap",n)}),s(e)},mapAction(e){const{clickData:a}=this;a.show=!1},mapClick(e){const{clickData:a}=this,{alladcode:s,initChart:n,nav:l}=this.chartData;if(a.show=!1,l.data[l.data.length-1].name!=e.name)if(e.componentType=="geo"){let r=s.filter(t=>t.name===e.name)[0].adcode,o={code:r,name:e.name};l.data[l.data.length-1].name!=e.name&&(this.initChart(o),l.data.push({code:r,name:e.name}))}else e.code&&this.initChart(e);e.componentType=="series"&&(a.area=e.name,a.data=e.data.value[2],a.x=e.domPosition[0],a.y=e.domPosition[1],a.show=!0)},dataRefresh(){const{chartData:e,$timer:a}=this;a("refreshData",()=>{this.initChart(e.nav.data[e.nav.data.length-1]),this.dataRefresh()},5e3)}},mounted(){const{chartData:e}=this;this.initChart(e.nav.data[0]),this.dataRefresh()},beforeDestroy(){const{$timer:e}=this;e("refreshData")},destroyed(){}};var k=function(){var a=this,s=a._self._c;return s("div",{staticClass:"map-wrap map-plane"},[s("div",{staticClass:"legend"},a._l(a.legend,function(n,l){return s("div",{class:`item item-${l}`},[s("i",{staticClass:"svgIcon"}),s("span",{staticClass:"desc"},[a._v(a._s(n))])])}),0),a.mapInited?s("echartsMap",{staticClass:"echartMap",attrs:{chartOption:a.chartOption,chartData:a.chartData},on:{mapClick:a.mapClick,mapAction:a.mapAction}}):a._e()],1)},M=[],A=z(S,k,M,!1,null,null,null,null);const R=A.exports;export{R as default};
